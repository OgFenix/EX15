#BlueJ class context
comment0.target=Set
comment1.params=
comment1.target=boolean\ isEmpty()
comment1.text=\r\n\ isEmpty\ function\ to\ check\ if\ the\ set\ is\ empty\ \r\n\ Time\ complexity\ -\ o(1)\r\n\ Memory\ complexity\ -\ o(1)\r\n\ @return\ True\ if\ set\ is\ empty\ \r\n
comment10.params=x
comment10.target=IntNode\ addCurrHeadSet(int)
comment10.text=\r\n\ Time\ complexity\ -\ o(1)\r\n\ Memory\ complexity\ -\ o(1)\r\n
comment11.params=other
comment11.target=Set\ intersection(Set)
comment11.text=\r\n\ returns\ the\ intersection\ set\ to\ this\ set\ \r\n\ Time\ complexity\ -\ o(n)\r\n\ Memory\ complexity\ -\ o(n)\r\n\ @param\ other\ the\ set\ to\ intersect\ with\r\n\ @return\ a\ new\ set\ object\ which\ is\ the\ intersection\ of\ both\ sets\r\n
comment12.params=other
comment12.target=Set\ union(Set)
comment12.text=\r\n\ the\ union\ set\ of\ this\ and\ other\ set\ \r\n\ Time\ complexity\ -\ o(n)\r\n\ Memory\ complexity\ -\ o(n)\r\n\ @param\ other\ the\ set\ to\ get\ the\ unions\ with\r\n\ @return\ a\ new\ set\ which\ is\ the\ union\ of\ this\ and\ other\ set\ \r\n
comment13.params=other
comment13.target=Set\ difference(Set)
comment13.text=\r\n\ the\ difference\ of\ both\ sets\ \r\n\ Time\ complexity\ -\ o(n)\r\n\ Memory\ complexity\ -\ o(n)\r\n\ @param\ other\ the\ set\ to\ get\ difference\ with\r\n\ @return\ a\ new\ set\ which\ is\ the\ difference\ between\ other\ and\ this\ \r\n
comment2.params=num
comment2.target=boolean\ isMember(int)
comment2.text=\r\n\ check\ if\ a\ number\ is\ apart\ of\ the\ set\r\n\ Time\ complexity\ -\ o(n)\r\n\ Memory\ complexity\ -\ o(1)\r\n\ @param\ num\ The\ number\ to\ check\r\n\ @return\ True\ if\ the\ number\ is\ in\ the\ set\r\n
comment3.params=other
comment3.target=boolean\ equals(Set)
comment3.text=\r\n\ check\ if\ 2\ sets\ are\ the\ equal\r\n\ *\ Time\ complexity\ -\ o(n)\r\n\ *\ Memory\ complexity\ -\ o(1)\r\n\ @param\ other\ the\ other\ set\ to\ check\ if\ equal\ \r\n\ @return\ true\ if\ equls\ \r\n
comment4.params=
comment4.target=int\ numOfElements()
comment4.text=\r\n\ returns\ length\r\n\ Time\ complexity\ -\ o(1)\r\n\ Memory\ complexity\ -\ o(1)\r\n\ @return\ lenght\ of\ the\ nodechain\r\n
comment5.params=other
comment5.target=boolean\ subSet(Set)
comment5.text=\r\n\ check\ if\ the\ other\ set\ is\ a\ subset\ to\ this\ set\ \r\n\ Time\ complexity\ -\ o(n)\r\n\ Memory\ complexity\ -\ o(1)\r\n\ @param\ other\ the\ set\ to\ compare\ to\ this\ subset\ \r\n\ @return\ true\ if\ the\ other\ set\ is\ a\ subset\ to\ this\ set\r\n
comment6.params=x
comment6.target=void\ addToSet(int)
comment6.text=\r\n\ adds\ a\ number\ to\ a\ new\ set\ \r\n\ Time\ complexity\ -\ o(n)\r\n\ Memory\ complexity\ -\ o(1)\r\n\ @param\ x\ the\ number\ to\ add\r\n
comment7.params=x
comment7.target=void\ removeFromSet(int)
comment7.text=\r\n\ remove\ a\ number\ from\ set\ \r\n\ Time\ complexity\ -\ o(n)\r\n\ Memory\ complexity\ -\ o(1)\r\n\ @param\ x\ the\ number\ to\ remove\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ makes\ the\ set\ into\ a\ string\r\n\ Time\ complexity\ -\ o(n)\r\n\ Memory\ complexity\ -\ o(n)\r\n\ @return\ a\ string\ description\ to\ the\ set\r\n
comment9.params=p\ x
comment9.target=IntNode\ addParamToSet(IntNode,\ int)
comment9.text=\r\n\ Time\ complexity\ -\ o(1)\r\n\ Memory\ complexity\ -\ o(1)\r\n
numComments=14
